1. 스프레드 문법
    - ...키워드 사용
    - 스프레드 문법은 하나로 뭉쳐있는 여러 값들의 집합을 펼쳐 개별적인 값들의 목록으로 만듦
    - Rest 파라미터와는 반대 개념
    - Rest 파라미터는 매개변수로 전달된 값들을 배열로 묶어주는 것
    - 스프레드 문법은 분리를 해서 요소 하나씩 찍어주는 것

2. Destructuring 할당(비구조화 할당)
    - 배열같은 집합 또는 객체의 구조를 파괴하여 1개 이상의 변수에 개별적으로 할당하는 것

3. set
    - set은 중복되지 않는 유일한 값들의 집합
    - 배열과 유사하지만 순서의 의미가 없고 중복 값이 허용되지 않음, 인덱스로 요소에 접근 불가능
    - set의 선언: new Set();

4. Map
    - Map은 Key와 value를 가지는 컬렉션
    - 객체와 차이점
        객체의 키로 사용할 수 있는 값: 문자열과 심벌
        Map의 키로 사용할 수 있는 값: 객체를 포함한 모든 값
        객체의 요소 개수 확인: length
        Map의 요소 개수 확인: size
    - Map 생성: new Map();

5. Promise
    - 자바스크립트에서는 비동기 처리를 위한 하나의 패턴으로 콜백 함수를 사용
    - 비동기 처리를 위해 콜백 함수안에 콜백 함수를 호출하는 경우가 발생
    - 콜백 함수 안에 콜백 함수를 계속하여 호출하는 것이 콜백 지옥
    - 콜백 지옥을 해결하기 위해 만들어진 문법이 Promise

6. async / await
    - async / await는 Promise 기반으로 움직임
    - async / await를 사용하면 비동기 처리인 Promise를 동기처리하는 것처럼 사용 가능
    - function앞에 async를 붙여주고 Promise 구문에 await를 붙여줌
    - Promise가 끝날 때까지 기다리고 결과 값을 변수에 저장 

7. Generator
    - 코드 블록으 일시 중지했다가 필요한 시점에 다시 재개할 수 있는 특수한 함수
    - generator 선언: function*
    - 반드시 하나 이상의 yield 구문을 가져야 함
    - 화살표 함수로는 정의 불가능
    - 객체로 생성하여 사용
    - next()라는 메소드를 사용하여 다음 yield를 만날 때까지 코드를 실행
    - 마지막 yield가 사용되고 yield가 더이상 없을때는 return;
